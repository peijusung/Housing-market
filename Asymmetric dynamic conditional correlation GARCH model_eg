
*****This GAUSS code is a modified version of Dr. C. James Huengâ€™s code
new;cls;
library fanpac,maxlik,cml;fanset;maxset;cmlset;
format/rd 8,5;outwidth 250;

load d[]=new.prn;    if ROWS(d) eq 500*3;d=RESHAPE(d,500,3);
                     else;errorlog "READ ERROR";endif;
month=d[.,1];
yt=ln(d[.,3]);
price=ln(100*d[.,2]./d[.,3]);

var1=yt-meanc(yt);
var2=price-meanc(price);


*** use my variable****




_hh1=0;
ParNames = "kappa1"|"delta1"|"alpha1"|"eGarch";
_max_parnames=parnames;
start=
0.0006 |
 .6967 |
.1 |
0.2433;

fan=packr(var1);
{parms,fff,g,varcov,ret}=maxlik(fan,0,&likes1,start);
{parms,fff,g,varcov,ret}=maxprt(parms,fff,g,varcov,ret);
if ret>2;"Fail to converge!!!";"Return Code=";;ret;
output off;goto OUTaHERE;elseif ret>0;"Fail to converge!!!";"Return Code=";;ret;endif;
_u2all=fan;_h2all=_hh1;

fan=packr(var2);
{parms,fff,g,varcov,ret}=maxlik(fan,0,&likes1,start);
{parms,fff,g,varcov,ret}=maxprt(parms,fff,g,varcov,ret);
if ret>2;"Fail to converge!!!";"Return Code=";;ret;
output off;goto OUTaHERE;elseif ret>0;"Fail to converge!!!";"Return Code=";;ret;endif;
_u1=fan;_h1=_hh1;

_u2=trimr(_u2all,rows(_u2all)-rows(_u1),0);
_h2=trimr(_h2all,rows(_h2all)-rows(_u1),0);

xi1=_u1./sqrt(_h1);
xi2=_u2./sqrt(_h2);
ksi=xi1~xi2;
Ksi_nn=minc((zeros(rows(xi1),1)~xi1)')~minc((zeros(rows(xi2),1)~xi2)');
uncvc=ksi'ksi/rows(ksi);
vec_unc=vech(uncvc)';
uncvc_nn=Ksi_nn'Ksi_nn/rows(Ksi_nn);

fan=ksi~Ksi_nn;



/*******************restrictions***************/
bigt=uncvc[1,1]+uncvc[2,2];
s=sqrt(det(uncvc));
st=sqrt(bigt+2*s);
sqrtofs=(((uncvc[1,1]+s)~uncvc[1,2])|(uncvc[2,1]~(uncvc[2,2]+s)))/st;/*sqrtofs*sqrtofs;uncvc;end;*/
delta_nn=maxc(eig(invpd(sqrtofs)*uncvc_nn*invpd(sqrtofs)));
_cml_IneqProc=&ineq;
proc ineq(parms);
local p12,p22,p32;
p12=parms[1]^2;p22=parms[2]^2;p32=parms[3]^2;
retp(1-(p12)-(p22)-delta_nn*(p32)-1e-5);
endp;
/***********************************************/

***
_cml_parnames="garch11"|"arch11"|"nn";

start= 
 .967 |
.1461 |
zeros(cols(fan)/2-1,1)
;

_bigh={};screen off;
{ parms,fff,g,varcov,ret } = cml(fan,0,&likes2,start );screen on;

**

_max_parnames="garch11"|"arch11"|"nn";
/*{ parms,fff,g,varcov,ret } = maxlik(fan,0,&likes2,start );screen on;*/
{parms,fff,g,varcov,ret}=fastmax(fan,0,&likes2,parms);
{parms,fff,g,varcov,ret}=maxprt(parms,fff,g,varcov,ret);
/*{ parms,fff,g,varcov,ret } = cmlprt(parms,fff,g,varcov,ret );cmlset;*/
if ret>2;"Fail to converge!!!";"Return Code=";;ret;
output off;goto OUTaHERE;elseif ret>0;"Fail to converge!!!";"Return Code=";;ret;endif;


format/rd 8,5;

DccCorr=_bigh[.,2]./sqrt(_bigh[.,1].*_bigh[.,3]);
xlswritem(dcccorr, "DccCorr.xls", "a1", 1, 0);


outahere:
end;


proc likes1( b,z );
local i,eta,u1;
/*	b[1]=exp(-1*b[1])/10;	b[2]=.9999/(1+exp(-b[2]));	b[3]=(.9999-b[2])/(1+exp(-b[3]));*/
_hh1=zeros(rows(z),1);_hh1[1]=meanc(z^2);
i=2;do until i>rows(z);
_hh1[i]=exp(
b[1] +
b[2]*ln(_hh1[i-1])  +
b[3]*(z[i-1]/sqrt(_hh1[i-1])) +
b[4]*abs(z[i-1]/sqrt(_hh1[i-1]))
);
i=i+1;endo;

if (minc(missrv(_hh1,0)) == 0) or (maxc(_hh1) > 1e5); eta = -1e10;
else;
eta=-0.5*(((z^2 )./ _hh1) + ln(2 * pi) + ln(_hh1));
endif;
retp(eta);
endp;


proc likes2( b,z );
local b12,b22,b32,cm,q11,q12,q22,i,idn,biga,bigb,bigg,qqq,temQ,garch0,bigq,bigr,qstarinv,liklh,bigd;
redo:
/*b[1]=.9999/(1+exp(-b[1]));b[2]=(.9999-b[1])/(1+exp(-b[2]));b[3]=exp(-1*b[3])/10;*/

b12=b[1]^2;b22=b[2]^2;b32=b[3]^2;

garch0=uncvc-b12*uncvc-b22*uncvc-b32*uncvc_nn;
/*
biga=(sqrt(b[2])~0)|(0~sqrt(b[2]));
bigb=(sqrt(b[1])~0)|(0~sqrt(b[1]));
bigg=(sqrt(b[3])~0)|(0~sqrt(b[3]));
garch0=uncvc-biga'uncvc*biga-bigb'uncvc*bigb-bigg'uncvc_nn*bigg;
*/
/*
trap 1; cm = invpd(garch0); trap 0; if scalerr(cm);"non-positive def GARCH0 -->";   b[3:5]=0*b[3:5];goto redo;endif;
*/
qqq=zeros(rows(z),3);
qqq[1,.]=vec_unc;/*vec_unc=vech(uncvc)'*/
temQ=uncvc;
i=2;do until i>rows(z);
/*temQ=garch0+biga'z[i-1,1:2]'z[i-1,1:2]*biga+bigb'temQ*bigb+bigg'z[i-1,3:4]'z[i-1,3:4]*bigg;*/
temQ=garch0+b12*temQ+b22*z[i-1,1:2]'z[i-1,1:2]+b32*z[i-1,3:4]'z[i-1,3:4];
/*
trap 1; cm = invpd(temQ);   trap 0; if scalerr(cm);"Non-positive def Q";end;endif;
*/
qqq[i,.]=vech(temQ)';
i=i+1;endo;

q11=qqq[.,1];q12=qqq[.,2];q22=qqq[.,3];_bigh={};liklh={};
idn=1;do until idn>rows(q22);
bigq=(q11[idn]~q12[idn])|(q12[idn]~q22[idn]);
qstarinv=inv((sqrt(q11[idn])~0)|(0~sqrt(q22[idn])));
bigr=qstarinv*bigq*qstarinv;
liklh=liklh|(ln(det(bigr))+z[idn,1:2]*inv(bigr)*z[idn,1:2]');
bigd=(sqrt(_h1[idn])~0)|(0~sqrt(_h2[idn]));
_bigh=_bigh|vech(bigd*bigr*bigd)';
idn=idn+1;endo;
retp(-.5*liklh);
endp;



